class DiscloudMonitor {
  static logStartup() {
    console.log("üöÄ Iniciando bot no Render...")
    console.log(`üìä Mem√≥ria inicial: ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)}MB`)
    console.log(`üåê Ambiente: ${process.env.NODE_ENV || "development"}`)
    console.log(`‚ö° Node.js: ${process.version}`)
  }

  static logSuccess(message) {
    console.log(`‚úÖ ${message}`)
  }

  static logError(error, context = "Erro geral") {
    console.error(`‚ùå ${context}:`, error)
  }

  static startMemoryMonitoring() {
    setInterval(() => {
      const memUsage = process.memoryUsage()
      const heapUsed = Math.round(memUsage.heapUsed / 1024 / 1024)

      if (heapUsed > 400) {
        // Alerta se usar mais de 400MB
        console.warn(`‚ö†Ô∏è Alto uso de mem√≥ria: ${heapUsed}MB`)
      }
    }, 300000) // Verifica a cada 5 minutos
  }

  static logDeployInfo() {
    console.log("üåê Deploy Information:")
    console.log(`   - Platform: Render`)
    console.log(`   - URL: ${process.env.RENDER_EXTERNAL_URL || "localhost"}`)
    console.log(`   - Port: ${process.env.PORT || 3000}`)
    console.log(`   - Memory Limit: 512MB`)
  }
}

module.exports = DiscloudMonitor
